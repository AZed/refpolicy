
policy_module(privoxy,1.0)

########################################
#
# Declarations
#

type privoxy_t;
type privoxy_exec_t;
init_daemon_domain(privoxy_t,privoxy_exec_t)

type privoxy_log_t;
logging_log_file(privoxy_log_t)

type privoxy_var_run_t;
files_pid_file(privoxy_var_run_t)

########################################
#
# Local Policy
#

allow privoxy_t self:capability { setgid setuid };
dontaudit privoxy_t self:capability sys_tty_config;

allow privoxy_t privoxy_log_t:file create_file_perms;
allow privoxy_t privoxy_log_t:dir rw_dir_perms;
logging_search_logs(privoxy_t,privoxy_log_t,{ file dir })

allow privoxy_t privoxy_var_run_t:file create_file_perms;
files_create_pid(privoxy_t,privoxy_var_run_t)

kernel_read_kernel_sysctl(privoxy_t)
kernel_list_proc(privoxy_t)
kernel_read_proc_symlinks(privoxy_t)

corenet_tcp_sendrecv_all_if(privoxy_t)
corenet_udp_sendrecv_all_if(privoxy_t)
corenet_raw_sendrecv_all_if(privoxy_t)
corenet_tcp_sendrecv_all_nodes(privoxy_t)
corenet_udp_sendrecv_all_nodes(privoxy_t)
corenet_raw_sendrecv_all_nodes(privoxy_t)
corenet_tcp_sendrecv_all_ports(privoxy_t)
corenet_udp_sendrecv_all_ports(privoxy_t)
# cjp: this really should be specified!
corenet_tcp_bind_generic_port(privoxy_t)
corenet_udp_bind_generic_port(privoxy_t)

dev_read_sysfs(privoxy_t)

fs_getattr_all_fs(privoxy_t)
fs_search_auto_mountpoints(privoxy_t)

term_dontaudit_use_console(privoxy_t)

domain_use_wide_inherit_fd(privoxy_t)

files_read_etc_files(privoxy_t)

init_use_fd(privoxy_t)
init_use_script_pty(privoxy_t)

libs_use_ld_so(privoxy_t)
libs_use_shared_libs(privoxy_t)

logging_send_syslog_msg(privoxy_t)

miscfiles_read_localization(privoxy_t)

userdom_dontaudit_use_unpriv_user_fd(privoxy_t)
userdom_dontaudit_search_sysadm_home_dir(privoxy_t)
# cjp: this should really not be needed
userdom_use_sysadm_terms(privoxy_t)

ifdef(`targeted_policy',`
	term_dontaudit_use_unallocated_tty(privoxy_t)
	term_dontaudit_use_generic_pty(privoxy_t)
	files_dontaudit_read_root_file(privoxy_t)
')

optional_policy(`mount.te',`
	mount_send_nfs_client_request(privoxy_t)
')

optional_policy(`selinuxutil.te',`
	seutil_sigchld_newrole(privoxy_t)
')

optional_policy(`udev.te', `
	udev_read_db(privoxy_t)
')

ifdef(`TODO',`
optional_policy(`rhgb.te',`
	rhgb_domain(privoxy_t)
')
')
