## <summary>Policy for the RPM package manager.</summary>

########################################
## <summary>
##	Execute rpm programs in the rpm domain.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_domtrans',`
	gen_require(`
		type rpm_t, rpm_exec_t;
		class process sigchld;
		class fd use;
		class fifo_file rw_file_perms;
	')

	files_search_usr($1)
	corecmd_search_bin($1)
	domain_auto_trans($1,rpm_exec_t,rpm_t)

	allow $1 rpm_t:fd use;
	allow rpm_t $1:fd use;
	allow rpm_t $1:fifo_file rw_file_perms;
	allow rpm_t $1:process sigchld;
')

########################################
## <summary>
##	Execute RPM programs in the RPM domain.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
## <param name="role">
##	The role to allow the RPM domain.
## </param>
## <param name="terminal">
##	The type of the terminal allow the RPM domain to use.
## </param>
#
interface(`rpm_run',`
	gen_require(`
		type rpm_t, rpm_script_t;
		class chr_file rw_term_perms;
	')

	rpm_domtrans($1)
	role $2 types rpm_t;
	role $2 types rpm_script_t;
	allow rpm_t $3:chr_file rw_term_perms;
')

########################################
## <summary>
##	Inherit and use file descriptors from RPM.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_use_fd',`
	gen_require(`
		type rpm_t;
		class fd use;
	')

	allow $1 rpm_t:fd use;
')

########################################
## <summary>
##	Read from an unnamed RPM pipe.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_read_pipe',`
	gen_require(`
		type rpm_t;
		class fifo_file r_file_perms;
	')

	allow $1 rpm_t:fifo_file r_file_perms;
')

########################################
## <summary>
##	Read and write an unnamed RPM pipe.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_rw_pipe',`
	gen_require(`
		type rpm_t;
		class fifo_file rw_file_perms;
	')

	allow $1 rpm_t:fifo_file rw_file_perms;
')

########################################
## <summary>
##	Create, read, write, and delete the RPM log.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_manage_log',`
	gen_require(`
		type rpm_log_t;
		class file create_file_perms;
	')

	logging_rw_log_dir($1)
	allow $1 rpm_log_t:file create_file_perms;
')

########################################
## <summary>
##	Inherit and use file descriptors from RPM scripts.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_use_script_fd',`
	gen_require(`
		type rpm_script_t;
		class fd use;
	')

	allow $1 rpm_script_t:fd use;
')

########################################
## <summary>
##	Read the RPM package database.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_read_db',`
	gen_require(`
		type rpm_var_lib_t_t;
		class dir r_dir_perms;
		class lnk_file r_file_perms;
		class file r_file_perms;
	')

	allow $1 rpm_var_lib_t:dir r_dir_perms;
	allow $1 rpm_var_lib_t:file r_file_perms;
	allow $1 rpm_var_lib_t:lnk_file r_file_perms;
')

########################################
## <summary>
##	Create, read, write, and delete the RPM package database.
## </summary>
## <param name="domain">
##	The type of the process performing this action.
## </param>
#
interface(`rpm_manage_db',`
	gen_require(`
		type rpm_var_lib_t;
		class dir rw_dir_perms;
		class lnk_file { getattr read write unlink };
		class file { getattr create read write append unlink };
	')

	allow $1 rpm_var_lib_t:dir rw_dir_perms;
	allow $1 rpm_var_lib_t:file { getattr create read write append unlink };
	allow $1 rpm_var_lib_t:lnk_file { getattr read write unlink };
')

