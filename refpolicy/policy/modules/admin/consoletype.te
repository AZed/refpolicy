
policy_module(consoletype, 1.0)

########################################
#
# Declarations
#

type consoletype_t;
type consoletype_exec_t;
init_domain(consoletype_t,consoletype_exec_t)
init_system_domain(consoletype_t,consoletype_exec_t)
role system_r types consoletype_t;

########################################
#
# Local declarations
#

allow consoletype_t self:capability sys_admin;
allow consoletype_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
allow consoletype_t self:fd use;
allow consoletype_t self:fifo_file rw_file_perms;
allow consoletype_t self:unix_dgram_socket create_socket_perms;
allow consoletype_t self:unix_stream_socket create_stream_socket_perms;
allow consoletype_t self:unix_dgram_socket sendto;
allow consoletype_t self:unix_stream_socket connectto;
allow consoletype_t self:shm create_shm_perms;
allow consoletype_t self:sem create_sem_perms;
allow consoletype_t self:msgq create_msgq_perms;
allow consoletype_t self:msg { send receive };

kernel_use_fd(consoletype_t)
kernel_dontaudit_read_system_state(consoletype_t)

fs_getattr_all_fs(consoletype_t)
fs_search_auto_mountpoints(consoletype_t)

term_use_console(consoletype_t)
term_use_unallocated_tty(consoletype_t)

init_use_fd(consoletype_t)
init_use_script_pty(consoletype_t)
init_use_script_fd(consoletype_t)

domain_use_wide_inherit_fd(consoletype_t)

files_dontaudit_read_root_file(consoletype_t)

libs_use_ld_so(consoletype_t)
libs_use_shared_libs(consoletype_t)

userdom_use_sysadm_terms(consoletype_t)
userdom_use_sysadm_fd(consoletype_t)
userdom_rw_sysadm_pipe(consoletype_t)

ifdef(`distro_redhat', `
	fs_use_tmpfs_chr_dev(consoletype_t)
')

optional_policy(`authlogin.te', `
	auth_read_pam_pid(consoletype_t)
')

optional_policy(`cron.te',`
	cron_read_pipe(consoletype_t)
')

optional_policy(`firstboot.te',`
	files_read_etc_files(consoletype_t)
	firstboot_use_fd(consoletype_t)
	firstboot_write_pipe(consoletype_t)
')

optional_policy(`logrotate.te',`
	logrotate_dontaudit_use_fd(consoletype_t)
')

optional_policy(`nis.te',`
	nis_use_ypbind(consoletype_t)
')

optional_policy(`rpm.te',`
	# Commonly used from postinst scripts
	rpm_read_pipe(consoletype_t)
')

optional_policy(`userdomain.te',`
	userdom_use_unpriv_users_fd(consoletype_t)
')

ifdef(`TODO',`
allow consoletype_t nfs_t:file write;

allow consoletype_t system_crond_t:fd use;

optional_policy(`xdm.te', `
allow consoletype_t xdm_tmp_t:file rw_file_perms;
')

# this goes to xdm module
optional_policy(`consoletype.te',`
	consoletype_domtrans(xdm_t)
')

optional_policy(`lpd.te', `
allow consoletype_t printconf_t:file r_file_perms;
')

') dnl end TODO
